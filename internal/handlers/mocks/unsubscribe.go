// Code generated by MockGen. DO NOT EDIT.
// Source: internal/handlers/unsubscribe.go
//
// Generated by this command:
//
//	mockgen -source=internal/handlers/unsubscribe.go -destination=internal/handlers/mocks/unsubscribe.go -package=handlers_mocks
//

// Package handlers_mocks is a generated GoMock package.
package handlers_mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUnsubscribeFacade is a mock of UnsubscribeFacade interface.
type MockUnsubscribeFacade struct {
	ctrl     *gomock.Controller
	recorder *MockUnsubscribeFacadeMockRecorder
	isgomock struct{}
}

// MockUnsubscribeFacadeMockRecorder is the mock recorder for MockUnsubscribeFacade.
type MockUnsubscribeFacadeMockRecorder struct {
	mock *MockUnsubscribeFacade
}

// NewMockUnsubscribeFacade creates a new mock instance.
func NewMockUnsubscribeFacade(ctrl *gomock.Controller) *MockUnsubscribeFacade {
	mock := &MockUnsubscribeFacade{ctrl: ctrl}
	mock.recorder = &MockUnsubscribeFacadeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnsubscribeFacade) EXPECT() *MockUnsubscribeFacadeMockRecorder {
	return m.recorder
}

// IsEmailUnsubscribed mocks base method.
func (m *MockUnsubscribeFacade) IsEmailUnsubscribed(ctx context.Context, email string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsEmailUnsubscribed", ctx, email)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsEmailUnsubscribed indicates an expected call of IsEmailUnsubscribed.
func (mr *MockUnsubscribeFacadeMockRecorder) IsEmailUnsubscribed(ctx, email any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsEmailUnsubscribed", reflect.TypeOf((*MockUnsubscribeFacade)(nil).IsEmailUnsubscribed), ctx, email)
}

// UnsubscribeEmail mocks base method.
func (m *MockUnsubscribeFacade) UnsubscribeEmail(ctx context.Context, token string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnsubscribeEmail", ctx, token)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UnsubscribeEmail indicates an expected call of UnsubscribeEmail.
func (mr *MockUnsubscribeFacadeMockRecorder) UnsubscribeEmail(ctx, token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnsubscribeEmail", reflect.TypeOf((*MockUnsubscribeFacade)(nil).UnsubscribeEmail), ctx, token)
}
